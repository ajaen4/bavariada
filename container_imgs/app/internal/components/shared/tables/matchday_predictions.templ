package tables

import (
	"app/internal/db"
	"fmt"
    "github.com/jackc/pgx/pgtype"
)

templ MatchdayPredictions(matches []db.Match, predictions []db.UserPredictions) {
    <div class="overflow-x-auto w-full">
        <div class="inline-block min-w-full rounded-lg overflow-hidden shadow-lg">
            <table class="min-w-full bg-gray-800 text-sm border-collapse">
                <thead class="bg-gray-800">
                    <tr>
                        <th class="sticky left-0 z-10 bg-gray-800 py-3 px-4 border-b-2 border-r-2 border-gray-600 rounded-tl-lg">Partidos</th>
                        for i, pred := range predictions {
                            if i == len(predictions) - 1 {
                                <th class="py-3 px-1 border-b-2 border-gray-600 text-center rounded-tr-lg" colspan="2">
                                    {pred.UserName}
                                </th>
                            } else {
                                <th class="py-3 px-1 border-b-2 border-r-2 border-gray-600 text-center" colspan="2">
                                    {pred.UserName}
                                </th>
                            }
                        }
                    </tr>
                </thead>
                <tbody>
                    for i, match := range matches {
                        <tr class={templ.KV("bg-gray-750", i%2 == 0), templ.KV("bg-gray-800", i%2 != 0), "hover:bg-gray-800"}>
                            <td class="sticky left-0 z-10 py-2 px-2 border-b border-r border-gray-600">
                                {fmt.Sprintf("%s vs %s", match.HomeName, match.AwayName)}
                            </td>
                            for _, pred := range predictions {
                                if i == len(matches) - 1 {
                                    // Last row for each user
                                    <td class={
                                        "py-2 px-2 border-b border-r border-gray-600 text-center",
                                        getColourClass(pred.IsCorrect[i][0])                                    
                                    } colspan="2">
                                        {pred.Predictions[i][0]}
                                    </td>
                                } else {
                                    // Regular rows
                                    <td class={
                                        "py-2 px-2 border-b border-gray-600 text-center",
                                        getColourClass(pred.IsCorrect[i][0])
                                    }>
                                        {pred.Predictions[i][0]}
                                    </td>
                                    <td class={
                                            "py-2 px-2 border-b border-r border-gray-600 text-center",
                                            getColourClass(pred.IsCorrect[i][1])
                                    }>
                                        {pred.Predictions[i][1]}
                                    </td>
                                }
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

func getColourClass(isCorrect pgtype.Bool) string {
    if isCorrect.Status == pgtype.Present && isCorrect.Bool{
        return "bg-green-800"
    }

    if isCorrect.Status == pgtype.Present && !isCorrect.Bool{
        return "bg-red-800"
    }

    return ""
}