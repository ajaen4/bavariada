package tables

import (
	"app/internal/db"
	"strconv"
)

templ ResultsPerMatchday(userResults []db.UserMatchdayResults) {
	<div class="overflow-x-auto">
		<table class="min-w-full bg-gray-800 shadow-md rounded-lg overflow-hidden">
			<thead class="bg-gray-700">
				<tr>
					<th class="py-3 px-4 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Jornada</th>
					for _, user := range getUserNames(userResults) {
						<th class="py-3 px-4 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">{user}</th>
					}
				</tr>
			</thead>
			<tbody class="divide-y divide-gray-700">
				for _, matchday := range getMatchdays(userResults) {
					<tr class="hover:bg-gray-700 transition-colors duration-200">
						<td class="py-3 px-4 whitespace-nowrap">{strconv.Itoa(matchday)}</td>
						for _, user := range getUserNames(userResults) {
							<td class={"py-3 px-4 whitespace-nowrap", getClassDebt(userResults, user, matchday)}>{getPointsForUserAndMatchday(userResults, user, matchday)}</td>
						}
					</tr>
				}
			</tbody>
		</table>
	</div>
}

func getUserNames(userResults []db.UserMatchdayResults) []string {
	userNamesMap := make(map[string]bool)
	var userNames []string
	for _, point := range userResults {
		if !userNamesMap[point.UserName] {
			userNamesMap[point.UserName] = true
			userNames = append(userNames, point.UserName)
		}
	}
	return userNames
}

func getMatchdays(userResults []db.UserMatchdayResults) []int {
	matchdaysMap := make(map[int]bool)
	var matchdays []int
	for _, point := range userResults {
		if !matchdaysMap[point.MatchDay] {
			matchdaysMap[point.MatchDay] = true
			matchdays = append(matchdays, point.MatchDay)
		}
	}
	return matchdays
}

func getPointsForUserAndMatchday(userResults []db.UserMatchdayResults, userName string, matchday int) string {
	for _, point := range userResults {
		if point.UserName == userName && point.MatchDay == matchday {
			return strconv.Itoa(point.Points)
		}
	}
	return "0"
}

func getClassDebt(userResults []db.UserMatchdayResults, userName string, matchday int) string {
	for _, result := range userResults {
		if result.UserName == userName && result.MatchDay == matchday && result.DebtEuros > 0 {
			return "text-red-600"
		}
	}
	return ""
}
